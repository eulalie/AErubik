//***********************************************************************
//
//
//
//***********************************************************************



#ifndef __CUBITOS_H__
#define __CUBITOS_H__


// ======================================================================
//                                  Libraries
// ======================================================================
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <fstream>
#include <vector>
#include <time.h>

// ======================================================================
//                                Project Files
// ======================================================================

// ======================================================================
//                              Class declarations
// ======================================================================

using namespace std;

class Cubitos
{
// ======================================================================
//                              Friend Class
// ======================================================================
 public :
    
    // ==================================================================
    //                                 Enums
    // ==================================================================
    
    // ==================================================================
    //                               Constructors
    // ==================================================================
  Cubitos(int* pos,string colors);

    // ==================================================================
    //                                Destructor
    // ==================================================================
  virtual ~Cubitos(void);
    // ==================================================================
    //                            Accessors: getters
    // ==================================================================
  inline int get_x(void)const;
  inline int get_y(void)const;
  inline int get_z(void)const;
  inline string get_colors(void)const;

    // ==================================================================
    //                            Accessors: setters
    // ==================================================================

    // ==================================================================
    //                                Operators
    // ==================================================================

    // ==================================================================
    //                              Public Methods
    // ==================================================================
  void print_cubito(void);
    // ==================================================================
    //                             Public Attributes
    // ==================================================================
    




  protected :

    // ==================================================================
    //                            Forbidden Constructors
    // ==================================================================
    
    Cubitos( void )
    {
      printf( "%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__ );
      exit( EXIT_FAILURE );
    };
    
    Cubitos( const Cubitos &model )
    {
      printf( "%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__ );
      exit( EXIT_FAILURE );
    };


    // ==================================================================
    //                              Protected Methods
    // ==================================================================

    // ==================================================================
    //                             Protected Attributes
    // ==================================================================
    int x;
    int y;
    int z;
    string colors;

};


// ======================================================================
//                              Getters' definitions
// ======================================================================
int Cubitos::get_x(void)const
{
  return x;
}
int Cubitos::get_y(void)const
{
  return y;
}
int Cubitos::get_z(void)const
{
  return z;
}
string Cubitos::get_colors(void)const
{
  return colors;
}

// ======================================================================
//                             Operators' definitions
// ======================================================================

// ======================================================================
//                          Inline functions' definition
// ======================================================================


#endif // __CUBITOS_H__
